def list_squared(m, n):
    '''1, 246, 2, 123, 3, 82, 6, 41 - делители
    числа 246.Возводя эти делители в квадрат, получаем: 1, 60516, 4, 15129, 9, 6724, 36, 1681.
    Сумма этих квадратов равна 84100, чтосоставляет 290 * 290.
    Задача
    Найдите все целые числа от m до n (m и n целые числа, такие как 1 <= m <= n), такие,
    что сумма их квадратов делителей сама по себе является квадратом.

    Мы вернем массив подмассивов или кортежей (в C массив Pair) или строку. Подмассивы
    (или кортежи, или пары) будут иметь два элемента: сначала число,
    квадрат делителей которого является квадратом, а затем сумма квадратов делителей.
    Пример:
    list_squared(1, 250) -> [[1, 1], [42, 2500], [246, 84100]]
    list_squared(42, 250) -> [[42, 2500], [246, 84100]]'''
    lst_devisers = [i for i in range(m, n + 1) if n % i == 0]

    print(lst)
    if sum(lst)** 0.5 % 1 == 0:
        print(True)
    # lst = [i for i in range(m, n + 1) if n % i == 0 if sum([i ** 2]) ** 0.5 % 1 == 0]
    return lst_devisers

print(list_squared(1, 247))
